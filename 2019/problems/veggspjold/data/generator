#/usr/bin/env bash
PPATH=$(realpath ..)
. ../../../testdata_tools/gen.sh

use_solution arnar_nlogn_100.cpp opt

compile random_generator.py # Arguments: type of testcase

samplegroup
#sample sampleinputname
sample 01
sample 02

# group groupname score
group no-inter 10
for i in {01..05}; do
tc no-inter-$i random_generator 1 1 200 1 50
done;
for i in {06..10}; do
tc no-inter-$i random_generator 1 190 200 50 50
done;

group single-inter 15
include_group no-inter
for i in {01..05}; do
tc single-inter-$i random_generator 2 1 200 1 50
done;
for i in {06..10}; do
tc single-inter-$i random_generator 2 190 200 50 50
done;

group tiny 20
include_group single-inter
for i in {01..04}; do
tc tiny-$i random_generator 3 1 200 1 1000
done;
for i in {05..09}; do
tc tiny-$i random_generator 3 190 200 1000 1000
done;
tc tiny-10 random_generator 4 200 200 1000 1000

group small 25
include_group tiny
for i in {01..04}; do
tc small-$i random_generator 3 1 2000 1 1000
done;
for i in {05..09}; do
tc small-$i random_generator 3 1950 2000 1000 1000
done;
tc small-10 random_generator 4 2000 2000 1000 1000

group medium 25
include_group small
for i in {01..04}; do
tc medium-$i random_generator 3 1 1000000000 1 1000
done;
for i in {05..09}; do
tc medium-$i random_generator 3 1 1000000000 1000 1000
done;
tc medium-10 random_generator 4 1000000000 1000000000 1000 1000

group large 5
include_group medium
for i in {01..04}; do
tc large-$i random_generator 3 1 1000000000 1001 100000
done;
for i in {05..09}; do
tc large-$i random_generator 3 1 1000000000 100000 100000
done;
tc large-10 random_generator 4 1000000000 1000000000 100000 100000

# Add more groups and adjust scoring if needed

#generate_grader
